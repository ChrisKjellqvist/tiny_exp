#ifndef TINY_EXP_H
#define TINY_EXP_H
#include <cinttypes>
template <typename t>
struct base_d_pr {
    t base, d;
};

namespace fpE8M7 {
template <typename t>
t tiny_exp(const t &f);
const base_d_pr<int16_t> lookup[2][14] = {
	{{0x3f81,0x1}, {0x3f82,0x2}, {0x3f84,0x4}, {0x3f88,0x9}, {0x3f91,0x13}, {0x3fa4,0x2f}, {0x3fd3,0x5a}, {0x402d,0xbf}, {0x40ec,0x16e}, {0x425a,0x2e0}, {0x453a,0x5cd}, {0x4b07,0xb88}, {0x568f,0x1712}},
	{{0x3f7e,0x2}, {0x3f7c,0x4}, {0x3f78,0x8}, {0x3f70,0xf}, {0x3f61,0x1a}, {0x3f47,0x2c}, {0x3f1b,0x5f}, {0x3ebc,0xb2}, {0x3e0a,0x174}, {0x3c96,0x2e7}, {0x39af,0x5be}, {0x33f1,0xb8d}, {0x2864,0x1719}}};
}
namespace fpE8M23 {
template <typename t>
t tiny_exp(const t &f);
const base_d_pr<int32_t> lookup[2][14] = {
	{{0x3f810100,0x10305}, {0x3f820405,0x20c26}, {0x3f84102b,0x4312f}, {0x3f88415a,0x8c9a8}, {0x3f910b02,0x134fef}, {0x3fa45af1,0x2eae5b}, {0x3fd3094c,0x5aef08}, {0x402df854,0xbe7ad1}, {0x40ec7325,0x16df15c}, {0x425a6481,0x2dfead2}, {0x453a4f53,0x5cd480b}, {0x4b07975e,0xb880aa0}, {0x568fa1fe,0x17118ac3}},
	{{0x3f7e01fe,0x1fa09}, {0x3f7c07f5,0x3e84a}, {0x3f781fab,0x7a24c}, {0x3f707d5f,0xe920e}, {0x3f61eb51,0x1a8bd5}, {0x3f475f7c,0x2c19e5}, {0x3f1b4597,0x5eeae6}, {0x3ebc5ab1,0xb1c55c}, {0x3e0a9555,0x1748aa8}, {0x3c960aad,0x2e629a5}, {0x39afe108,0x5be362b}, {0x33f1aadd,0xb8d87b6}, {0x28642327,0x1718d484}}};
}
namespace fpE5M10 {
template <typename t>
t tiny_exp(const t &f);
const base_d_pr<int16_t> lookup[2][8] = {
	{{0x3c04,0x4}, {0x3c08,0xa}, {0x3c12,0x17}, {0x3c29,0x3ed}, {0x4016,0x420}, {0x4436,0xbf7}, {0x502d,0x17f0}},
	{{0x3838,0x8}, {0x3830,0xd}, {0x3823,0x16}, {0x380d,0x3ef}, {0x341e,0x419}, {0x3005,0xbfa}, {0x240b,0x17f4}}};
}
#endif