#ifndef TINY_EXP_H
#define TINY_EXP_H
#include <cinttypes>

namespace fpE8M7 {
float tiny_exp(const float &f);
uint16_t tiny_exp(const uint16_t &as_bit);
const uint16_t blookup[2][14] = {
	{0x3f81, 0x3f82, 0x3f84, 0x3f88, 0x3f91, 0x3fa4, 0x3fd3, 0x402d, 0x40ec, 0x425a, 0x453a, 0x4b07, 0x568f},
	{0x3f7e, 0x3f7c, 0x3f78, 0x3f70, 0x3f61, 0x3f47, 0x3f1b, 0x3ebc, 0x3e0a, 0x3c96, 0x39af, 0x33f1, 0x2864}};
const uint32_t dlookup[2][14] = {
	{0x1, 0x2, 0x4, 0x9, 0x13, 0x2f, 0x5a, 0xbf, 0x16e, 0x2e0, 0x5cd, 0xb88, 0x1712},
	{0x2, 0x4, 0x8, 0xf, 0x1a, 0x2c, 0x5f, 0xb2, 0x174, 0x2e7, 0x5be, 0xb8d, 0x1719}};
}
namespace fpE8M23 {
float tiny_exp(const float &f);
uint32_t tiny_exp(const uint32_t &as_bit);
const uint32_t blookup[2][14] = {
	{0x3f810100, 0x3f820405, 0x3f84102b, 0x3f88415a, 0x3f910b02, 0x3fa45af1, 0x3fd3094c, 0x402df854, 0x40ec7325, 0x425a6481, 0x453a4f53, 0x4b07975e, 0x568fa1fe},
	{0x3f7e01fe, 0x3f7c07f5, 0x3f781fab, 0x3f707d5f, 0x3f61eb51, 0x3f475f7c, 0x3f1b4597, 0x3ebc5ab1, 0x3e0a9555, 0x3c960aad, 0x39afe108, 0x33f1aadd, 0x28642327}};
const uint64_t dlookup[2][14] = {
	{0x10305, 0x20c26, 0x4312f, 0x8c9a8, 0x134fef, 0x2eae5b, 0x5aef08, 0xbe7ad1, 0x16df15c, 0x2dfead2, 0x5cd480b, 0xb880aa0, 0x17118ac3},
	{0x1fa09, 0x3e84a, 0x7a24c, 0xe920e, 0x1a8bd5, 0x2c19e5, 0x5eeae6, 0xb1c55c, 0x1748aa8, 0x2e629a5, 0x5be362b, 0xb8d87b6, 0x1718d484}};
}
#endif